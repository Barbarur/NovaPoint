<Application x:Class="NovaPointWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:NovaPointWPF"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--COLORS-->
        
        <SolidColorBrush x:Key="PrimaryBackgroudColor" Color="#252836"/>
        <SolidColorBrush x:Key="SecondaryBackgroudColor" Color="#101214"/>

        <SolidColorBrush x:Key="PrimaryTextColor" Color="GhostWhite"/>
        <SolidColorBrush x:Key="LogoPinkColor" Color="#670134"/>

        <SolidColorBrush x:Key="PrimaryButtonColor" Color="#030615"/>
        <SolidColorBrush x:Key="HoverButtonColor" Color="#1F212E"/>
        <SolidColorBrush x:Key="CheckedButtonColor" Color="#484D65"/>
        <SolidColorBrush x:Key="PrimaryBorderColor" Color="#3E4852"/>

        <FontFamily x:Key="NPRegularFont">
            pack://application:,,,/res/font/#Open Sans
        </FontFamily>

        <!--BACKGROUND-->

        <Style x:Key="BorderPrimaryBackgroud" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource PrimaryBackgroudColor}"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="16"/>
        </Style>

        <Style x:Key="BorderSecondaryBackgroud" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource SecondaryBackgroudColor}"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="16"/>
        </Style>
        
        <Style x:Key="BorderSolutionFormFilter" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Pink"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="16"/>
        </Style>


        <!--TEXT-->
        
        <Style x:Key="MenuMainTitleLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="30"/>
        </Style>

        <Style x:Key="MenuSectionTitleLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontFamily" Value="Segoe UI Variable Text"/>
        </Style>

        <Style x:Key="SolutionFormLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>


        <Style x:Key="SolutionFormControlText" TargetType="{x:Type Label}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="Segoe UI Variable Text"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        </Style>


        <Style x:Key="SolutionFormControlBorder" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource PrimaryButtonColor}"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Height" Value="35"/>
        </Style>

        


        <Style x:Key="TextBlockBase" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontFamily" Value="{DynamicResource NPRegularFont}"/>
        </Style>

        <Style x:Key="TextBlockBody" BasedOn="{StaticResource TextBlockBase}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Light"/>
        </Style>

        <Style x:Key="TextBlockBodyStrong" BasedOn="{StaticResource TextBlockBase}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Regular"/>
        </Style>

        <Style x:Key="TextBlockSubtitle" BasedOn="{StaticResource TextBlockBase}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        
        <Style x:Key="TextBlockTitle" BasedOn="{StaticResource TextBlockBase}" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>


        
        <!--CONTROL-->

        <Style x:Key="ButtonSolutionMainAction" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource PrimaryButtonColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBorderColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Margin" Value="6"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>

                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="6"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">

                                <TextBlock
                                    
                                    x:Name="ButtonTitle"
                                    Style="{DynamicResource TextBlockBodyStrong}"
                                    Margin="10, 0, 10, 0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Text="{TemplateBinding Content}"/>

                            </Border>

                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBorderColor}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource CheckedButtonColor}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="FontSize" Value="14.5"/>
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource SecondaryBackgroudColor}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
                    <Setter Property="FontWeight" Value="Light"/>
                </Trigger>

            </Style.Triggers>
        </Style>
        
        
        <Style x:Key="MainPageToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="12">

                                <TextBlock
                                    x:Name="NombreTexto"
                                    Style="{DynamicResource TextBlockBodyStrong}"
                                    Text="{TemplateBinding Content}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsChecked" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource HoverButtonColor}"/>
                </MultiTrigger>

                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#484D65"/>
                </Trigger>

            </Style.Triggers>
        </Style>

        
        <Style x:Key="SolutionMenuButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>

                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                Padding="12">

                                <TextBlock
                                    x:Name="NombreTexto"
                                    Style="{DynamicResource TextBlockBody}"
                                    Text="{TemplateBinding Content}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1F212E"/>
                </Trigger>
            </Style.Triggers>
            
        </Style>


        <Style x:Key="ButtonSolutionForm" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource PrimaryButtonColor}"/>
            <Setter Property="Width" Value="160"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="12, 10">

                                <TextBlock
                                    x:Name="NombreTexto"
                                    Style="{DynamicResource TextBlockBody}"
                                    Text="{TemplateBinding Content}"
                                    HorizontalAlignment="Center"/>

                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverButtonColor}"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CheckedButtonColor}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="ToggleButtonSolutionForm" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{DynamicResource PrimaryButtonColor}"/>
            <Setter Property="Width" Value="160"/>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                Padding="12, 10">

                                <TextBlock
                                    x:Name="NombreTexto"
                                    Style="{DynamicResource TextBlockBody}"
                                    Text="{TemplateBinding Content}"
                                    HorizontalAlignment="Center"/>

                            </Border>

                        </Grid>
                        <ControlTemplate.Triggers>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverButtonColor}"/>
                            </MultiTrigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CheckedButtonColor}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>


        
        
        

        <!--Reference:-->
        <!--https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/combobox-styles-and-templates?view=netframeworkdesktop-4.8-->
        <Style x:Key="SolutionFormComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{DynamicResource PrimaryButtonColor}"/>
            <Setter Property="Margin" Value="2, 2, 2, 2"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Margin="0"
                                Width="{TemplateBinding Width}"
                                Content="{TemplateBinding SelectionBoxItem}"
                                Style="{DynamicResource ToggleButtonSolutionForm}"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                            <Popup
                                x:Name="PART_Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">

                                <Grid Name="DropDown"
                                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                    SnapsToDevicePixels="True">

                                    <Border
                                        Name="DropDownBorder"
                                        CornerRadius="8"
                                        Background="{TemplateBinding ComboBox.Background}">

                                        <ScrollViewer
                                            Style="{DynamicResource LeftScrollViewer}">

                                            <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />

                                        </ScrollViewer>

                                    </Border>

                                </Grid>

                            </Popup>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Grid
                            Margin="3, 3">

                            <Border
                                Name="Border"
                                Style="{DynamicResource SolutionFormControlBorder}"
                                Padding="18"/>

                            <Label
                                x:Name="Label"
                                Margin="10, 0, 10, 0"
                                Style="{DynamicResource SolutionFormControlText}"
                                Content="{Binding}"
                                DockPanel.Dock="Left"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverButtonColor}"/>
                            </MultiTrigger>

                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CheckedButtonColor}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="TextBoxSolutionFormTextInput" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource PrimaryButtonColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Setter Property="FontFamily" Value="Segoe UI Variable Text"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource CheckedButtonColor}"/>
            <Setter Property="SelectionTextBrush" Value="{DynamicResource PrimaryBackgroudColor}"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource LogoPinkColor}"/>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"
                            Padding="9, 7">

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden" 
                                VerticalScrollBarVisibility="Hidden"
                                VerticalContentAlignment="Center"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource HoverButtonColor}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource HoverButtonColor}"/>
                            </Trigger>

                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="Background" Value="{DynamicResource CheckedButtonColor}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource LogoPinkColor}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>








        <Style x:Key="LeftScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>
                            
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Border Grid.Column="0">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                            </Border>
                            
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                Template="{DynamicResource VerticalScrollBar}"
                                Grid.Column="1"
                                Value="{TemplateBinding VerticalOffset}"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            
                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                Orientation="Horizontal"
                                Grid.Row="1"
                                Grid.Column="1"
                                Value="{TemplateBinding HorizontalOffset}"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid
                Width="6">
                
                <Border
                    CornerRadius="1"
                    Background="{DynamicResource PrimaryBorderColor}" />

                <Track
                    x:Name="PART_Track"
                    IsDirectionReversed="true">
                    
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Style="{DynamicResource ScrollBarPageButton}"
                            Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource ScrollBarThumb}"
                               Background="{DynamicResource PrimaryTextColor}"/>
                    </Track.Thumb>
                    
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{DynamicResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                    
                </Track>

            </Grid>
        </ControlTemplate>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            CornerRadius="4"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
        <!--SUPPORT-->

        <Style x:Key="WindowGrid" TargetType="Grid">
            <Setter Property="Margin" Value="24"/>
        </Style>

        <Style x:Key="SolutionMenuGrid" TargetType="Grid">
            <Setter Property="Margin" Value="0, 12, 0, 20"/>
        </Style>



    </Application.Resources>
</Application>
